name: Deployment
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Build Image
        run: |
          docker buildx build \
            --build-arg PORT="${{ secrets.PORT }}" \
            --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --build-arg HOST="${{ secrets.HOST }}" \
            --build-arg NEW_RELIC_LICENSE_KEY="${{ secrets.NEW_RELIC_LICENSE_KEY }}" \
            --build-arg GIN_MODE=${{ secrets.GIN_MODE }} \
            --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --build-arg TWILIO_ACCOUNT_SID="${{ secrets.TWILIO_ACCOUNT_SID }}" \
            --build-arg TWILIO_AUTH_TOKEN="${{ secrets.TWILIO_AUTH_TOKEN }}" \
            -t auth-user:${{ github.run_number }} .

      - name: Compress artifacts
        run: docker save -o auth-user-${{ github.run_number }}.tar auth-user:${{ github.run_number }}

      - name: Copy artifacts to server
        run: |
          scp -o StrictHostKeyChecking=no auth-user-${{ github.run_number }}.tar ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/var/auth-user/

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            cd ${{ secrets.INSTALL_PATH }}
            export TAG=${{ github.run_number }}  # Set the TAG variable
            docker load -i /var/auth-user/auth-user-${{ github.run_number }}.tar
            docker stack deploy --compose-file docker-compose.yml auth-user
          EOF
